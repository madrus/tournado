name: Deploy

on:
  push:
    branches:
      - main
      - dev

# Ensure only one deployment workflow runs at a time per branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read
  deployments: write
  id-token: write

jobs:
  wait-for-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for CI
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          check-name: "typecheck" # Using a specific job from CI as indicator
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    # Only deploy after CI passes
    needs: [wait-for-ci]
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
      url: ${{ github.ref == 'refs/heads/main' && 'https://tournado.fly.dev' || 'https://tournado-staging.fly.dev' }}
    permissions:
      contents: read
      deployments: write
      id-token: write

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.2.0
        id: app_name
        with:
          file: fly.toml
          field: app

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@v1
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          echo "${{ secrets.FLY_API_TOKEN }}" > /tmp/fly_token
          # Deploy using Fly.io's standard deployment process with rolling updates
          flyctl deploy --remote-only \
            --build-arg COMMIT_SHA=${{ github.sha }} \
            --app ${{ steps.app_name.outputs.value }}-staging \
            --access-token "$(cat /tmp/fly_token)" \
            --strategy rolling \
            --max-unavailable 0.33 \
            --wait-timeout 5m \
            --yes

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "${{ secrets.FLY_API_TOKEN }}" > /tmp/fly_token
          # Deploy using Fly.io's standard deployment process with rolling updates
          flyctl deploy --remote-only \
            --build-arg COMMIT_SHA=${{ github.sha }} \
            --app ${{ steps.app_name.outputs.value }} \
            --access-token "$(cat /tmp/fly_token)" \
            --strategy rolling \
            --max-unavailable 0.33 \
            --wait-timeout 5m \
            --yes
