name: Deploy

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

env:
  ACTIONS_STEP_DEBUG: true
  ACTIONS_RUNNER_DEBUG: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false # Test without cancellation

permissions:
  contents: read
  deployments: write
  id-token: write

jobs:
  deploy_staging:
    name: Deploy to Staging (dev)
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'dev' }}
    runs-on: ubuntu-latest
    outputs:
      code_changed: ${{ steps.check_changes.outputs.code_changed }}
      image_exists: ${{ steps.check_image.outputs.image_exists }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 2 # Need 2 commits to compare

      - name: 🔍 Check for code changes
        id: check_changes
        run: |
          # Get the list of changed files
          git diff --name-only HEAD~1 HEAD > changed_files.txt

          # Check if any files outside .github/workflows changed
          if grep -v "^\.github/workflows/" changed_files.txt | grep -q .; then
            echo "code_changed=true" >> $GITHUB_OUTPUT
            echo "📝 Code changes detected"
            cat changed_files.txt
          else
            echo "code_changed=false" >> $GITHUB_OUTPUT
            echo "🚫 Only workflow changes detected, no code changes"
          fi

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.2.0
        id: app_name
        with:
          file: fly.toml
          field: app

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@v1
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🔍 Check if image exists for this commit
        id: check_image
        if: steps.check_changes.outputs.code_changed == 'false'
        run: |
          echo "${{ secrets.FLY_API_TOKEN }}" > /tmp/fly_token
          # Check if an image with this commit SHA already exists
          if flyctl image show --app ${{ steps.app_name.outputs.value }}-staging --access-token "$(cat /tmp/fly_token)" | grep -q "${{ github.event.workflow_run.head_sha }}"; then
            echo "image_exists=true" >> $GITHUB_OUTPUT
            echo "✅ Image already exists for commit ${{ github.event.workflow_run.head_sha }}"
          else
            echo "image_exists=false" >> $GITHUB_OUTPUT
            echo "❌ No image found for commit ${{ github.event.workflow_run.head_sha }}"
          fi

      # - name: 🚀 Deploy to Staging (Build & Deploy)
      #   if: steps.check_changes.outputs.code_changed == 'true'
      #   run: |
      #     echo "🔨 Building and deploying new code changes..."
      #     echo "${{ secrets.FLY_API_TOKEN }}" > /tmp/fly_token
      #     flyctl deploy --remote-only \
      #       --build-arg COMMIT_SHA=${{ github.event.workflow_run.head_sha }} \
      #       --app ${{ steps.app_name.outputs.value }}-staging \
      #       --access-token "$(cat /tmp/fly_token)" \
      #       --strategy rolling \
      #       --max-unavailable 0.33 \
      #       --wait-timeout 5m \
      #       --yes

      # - name: 🚀 Deploy to Staging (Deploy Only)
      #   if: steps.check_changes.outputs.code_changed == 'false' && steps.check_image.outputs.image_exists == 'true'
      #   run: |
      #     echo "📦 Deploying existing image (no code changes)..."
      #     echo "${{ secrets.FLY_API_TOKEN }}" > /tmp/fly_token
      #     # Deploy the existing image without rebuilding
      #     flyctl deploy --image-label ${{ github.event.workflow_run.head_sha }} \
      #       --app ${{ steps.app_name.outputs.value }}-staging \
      #       --access-token "$(cat /tmp/fly_token)" \
      #       --strategy rolling \
      #       --max-unavailable 0.33 \
      #       --wait-timeout 2m \
      #       --yes

      - name: Test Step After Deploy
        run: echo "This is a test step to see if it appears in logs"
      - name: Another Test Step
        run: |
          echo "Testing if this step appears"
          echo "Branch: ${{ github.event.workflow_run.head_branch }}"
          echo "Actor: ${{ github.event.workflow_run.actor.login }}"

  deploy_production:
    name: Deploy to Production (main)
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    outputs:
      code_changed: ${{ steps.check_changes.outputs.code_changed }}
      image_exists: ${{ steps.check_image.outputs.image_exists }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 2 # Need 2 commits to compare

      - name: 🔍 Check for code changes
        id: check_changes
        run: |
          # Get the list of changed files
          git diff --name-only HEAD~1 HEAD > changed_files.txt

          # Check if any files outside .github/workflows changed
          if grep -v "^\.github/workflows/" changed_files.txt | grep -q .; then
            echo "code_changed=true" >> $GITHUB_OUTPUT
            echo "📝 Code changes detected"
            cat changed_files.txt
          else
            echo "code_changed=false" >> $GITHUB_OUTPUT
            echo "🚫 Only workflow changes detected, no code changes"
          fi

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.2.0
        id: app_name
        with:
          file: fly.toml
          field: app

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@v1
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🔍 Check if image exists for this commit
        id: check_image
        if: steps.check_changes.outputs.code_changed == 'false'
        run: |
          echo "${{ secrets.FLY_API_TOKEN }}" > /tmp/fly_token
          # Check if an image with this commit SHA already exists
          if flyctl image show --app ${{ steps.app_name.outputs.value }} --access-token "$(cat /tmp/fly_token)" | grep -q "${{ github.event.workflow_run.head_sha }}"; then
            echo "image_exists=true" >> $GITHUB_OUTPUT
            echo "✅ Image already exists for commit ${{ github.event.workflow_run.head_sha }}"
          else
            echo "image_exists=false" >> $GITHUB_OUTPUT
            echo "❌ No image found for commit ${{ github.event.workflow_run.head_sha }}"
          fi

      - name: 🚀 Deploy to Production (Build & Deploy)
        if: steps.check_changes.outputs.code_changed == 'true'
        run: |
          echo "🔨 Building and deploying new code changes..."
          echo "${{ secrets.FLY_API_TOKEN }}" > /tmp/fly_token
          flyctl deploy --remote-only \
            --build-arg COMMIT_SHA=${{ github.event.workflow_run.head_sha }} \
            --app ${{ steps.app_name.outputs.value }} \
            --access-token "$(cat /tmp/fly_token)" \
            --strategy rolling \
            --max-unavailable 0.33 \
            --wait-timeout 5m \
            --yes

      - name: 🚀 Deploy to Production (Deploy Only)
        if: steps.check_changes.outputs.code_changed == 'false' && steps.check_image.outputs.image_exists == 'true'
        run: |
          echo "📦 Deploying existing image (no code changes)..."
          echo "${{ secrets.FLY_API_TOKEN }}" > /tmp/fly_token
          # Deploy the existing image without rebuilding
          flyctl deploy --image-label ${{ github.event.workflow_run.head_sha }} \
            --app ${{ steps.app_name.outputs.value }} \
            --access-token "$(cat /tmp/fly_token)" \
            --strategy rolling \
            --max-unavailable 0.33 \
            --wait-timeout 2m \
            --yes

      - name: Test Step After Deploy
        run: echo "This is a test step to see if it appears in logs"
      - name: Another Test Step
        run: |
          echo "Testing if this step appears"
          echo "Branch: ${{ github.event.workflow_run.head_branch }}"
          echo "Actor: ${{ github.event.workflow_run.actor.login }}"
