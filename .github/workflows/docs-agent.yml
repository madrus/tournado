name: 📚 Documentation Agent

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - "**"

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  update-documentation:
    name: 📚 Update Documentation
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Analyze changes and update documentation
        id: docs_update
        run: |
          # Get the base and head commits for comparison
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          
          echo "Analyzing changes between $BASE_SHA and $HEAD_SHA"
          
          # Run the documentation update script
          node scripts/docs-agent.js \
            --base-sha="$BASE_SHA" \
            --head-sha="$HEAD_SHA" \
            --pr-number="${{ github.event.pull_request.number }}" \
            --pr-title="${{ github.event.pull_request.title }}" \
            --pr-body="${{ github.event.pull_request.body }}"

      - name: 📝 Create documentation update summary
        if: steps.docs_update.outputs.docs_updated == 'true'
        run: |
          echo "## 📚 Documentation Updates" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The documentation has been automatically updated based on the changes in this PR:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "docs-update-summary.md" ]; then
            cat docs-update-summary.md >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Updated Files:" >> $GITHUB_STEP_SUMMARY
          git diff --name-only HEAD~1 HEAD | grep -E '\.(md|mdc)$' | while read file; do
            echo "- \`$file\`" >> $GITHUB_STEP_SUMMARY
          done

      - name: 💬 Comment on PR
        if: steps.docs_update.outputs.docs_updated == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## 📚 Documentation Updated\n\n';
            comment += 'This PR has triggered automatic documentation updates. The following documentation has been updated to reflect your changes:\n\n';
            
            if (fs.existsSync('docs-update-summary.md')) {
              const summary = fs.readFileSync('docs-update-summary.md', 'utf8');
              comment += summary + '\n\n';
            }
            
            comment += '### 📋 Files Modified:\n';
            const { execSync } = require('child_process');
            const changedFiles = execSync('git diff --name-only HEAD~1 HEAD | grep -E "\\.(md|mdc)$"', { encoding: 'utf8' });
            changedFiles.trim().split('\n').forEach(file => {
              if (file) {
                comment += `- \`${file}\`\n`;
              }
            });
            
            comment += '\n---\n';
            comment += '*This comment was automatically generated by the Documentation Agent.*';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: 🚀 Commit documentation updates
        if: steps.docs_update.outputs.docs_updated == 'true'
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add and commit documentation changes
          git add docs/ templates/ README.md CHANGELOG.md
          git commit -m "docs: update documentation based on PR #${{ github.event.pull_request.number }} changes

          - Updated documentation to reflect code changes
          - Maintained consistency with existing documentation structure
          - Auto-generated by Documentation Agent

          Related: #${{ github.event.pull_request.number }}" || echo "No documentation changes to commit"
          
          # Push changes back to the PR branch
          git push origin HEAD:${{ github.event.pull_request.head.ref }} || echo "No changes to push"

      - name: 🧹 Cleanup
        if: always()
        run: |
          rm -f docs-update-summary.md