name: Playwright Tests (Reusable)

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment to test against"
        required: false
        default: "local"
        type: string
      upload_artifact_suffix:
        description: "Suffix for the artifact name"
        required: false
        default: ""
        type: string
    secrets:
      DATABASE_URL:
        required: true
      FIREBASE_ADMIN_PROJECT_ID:
        required: true
      FIREBASE_ADMIN_CLIENT_EMAIL:
        required: true
      FIREBASE_ADMIN_PRIVATE_KEY:
        required: true

jobs:
  playwright:
    name: üé≠ Playwright
    timeout-minutes: 60
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: ‚éî Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: ‚éî Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: üì• Install deps
        run: pnpm install --no-frozen-lockfile

      - uses: ./.github/actions/prisma-generate
        with:
          database_url: "file:./prisma/data.db"

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      - name: üõ† Setup Database
        run: |
          # Ensure Prisma client is generated before migration
          pnpm exec prisma generate
          pnpm exec prisma migrate reset --force
          # Generate client again after database reset to ensure it's fresh
          pnpm exec prisma generate
          # Wait for the client to be fully ready
          sleep 3
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: ‚öôÔ∏è Build
        run: pnpm build

      - name: üé≠ Run Playwright tests with built app
        run: pnpm test:e2e:built
        env:
          PLAYWRIGHT: true
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          FIREBASE_ADMIN_PROJECT_ID: ${{ secrets.FIREBASE_ADMIN_PROJECT_ID }}
          FIREBASE_ADMIN_CLIENT_EMAIL: ${{ secrets.FIREBASE_ADMIN_CLIENT_EMAIL }}
          FIREBASE_ADMIN_PRIVATE_KEY: ${{ secrets.FIREBASE_ADMIN_PRIVATE_KEY }}

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report${{ inputs.upload_artifact_suffix }}
          path: playwright-report/
          retention-days: 30
